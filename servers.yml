---
- hosts: servers
  sudo: yes

  vars_files:
    - variables.yml

  tasks:
  - name: update apt
    action: command /usr/bin/apt-get update

  - name: install python-software-properties
    action: apt pkg=python-software-properties state=present

  # Web server packages.
  - name: install web server packages
    action: apt pkg={{ item }} state=installed
    with_items:
      - build-essential
      - libpq-dev
      - libmysqlclient-dev
      - libxml2-dev
      - zlib1g-dev
      - mysql-client
      - imagemagick
      - git
      - curl

  - name: add php ppa
    action: apt_repository repo=ppa:ondrej/php5 state=present

  # PHP packages.
  - name: install php packages
    action: apt pkg={{ item }} state=installed
    with_items:
      - php-pear
      - php-apc
      - php5-cli
      - php5-dev
      - php5-gd
      - php5-curl
      - php5-mcrypt
      - php5-xdebug
      - php5-sqlite
      - php5-mysql
      - php5-intl
      - php5-tidy
      - php5-imagick

  # Get composer and move it to a more usable executable path.
  - name: download composer
    action: command /usr/bin/curl -s http://getcomposer.org/installer -o /tmp/composer_installer

  - name: install composer
    action: command /usr/bin/php /tmp/composer_installer --install-dir=/usr/bin

  - name: move composer.phar to composer
    action: command mv /usr/bin/composer.phar /usr/bin/composer

  # DB server packages.
  - name: install db server packages
    action: apt pkg={{ item }} state=present
    with_items:
      - mysql-server
      - python-dev
      - python-setuptools
      - python-mysqldb

  - name: copy .my.cnf file with root password credentials
    template: src=roles/common/templates/mysql/.my.cnf dest=/root/.my.cnf group=root owner=root mode=0600
    notify:
        - restart mysql

  - name: update mysql root password for all root accounts
    action: mysql_user host={{ item }} login_user=root login_password="" name={{ mysql_username }} password={{ mysql_password }}
    with_items:
      - 127.0.0.1
      - ::1
      - localhost
    ignore_errors: yes

  - name: create database for app
    action: mysql_db login_user=root login_password="" name={{ mysql_database_name }} state=present
    ignore_errors: yes

  - name: update mysql user password for app
    action: mysql_user name={{ mysql_username }} password={{ mysql_password }} priv=*.*:ALL state=present
    ignore_errors: yes

  - name: restart mysql
    action: service name=mysql state=restarted

  # Install Apache.
  - name: install apache packages
    action: apt pkg={{ item}} state=present
    with_items:
      - apache2
      - libapache2-mod-php5

  - name: enable apache tools
    action: command a2enmod rewrite vhost_alias

  - name: copy apache vhost
    action: template src=roles/common/templates/apache/devserver.conf dest=/etc/apache2/sites-available/devserver.conf

  - name: enable the new devserver site
    action: command a2ensite devserver

  - name: reload apache and all new configurations
    action: command service apache2 reload